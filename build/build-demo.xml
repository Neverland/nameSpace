<?xml version="1.0" encoding="utf-8"?>
<project name="Test" default="mkdir" basedir=".">
    <property name="main" location="./script/new/xyz" /> <!-- location 指向绝对路径 -->
    <property name="main.dir" value="in" /> <!-- ./指向根目录-->
    <property name="concat.note" value="合并后abcdef" /> <!-- 定义注释文本-->

    <target name="build" depends="mkdir" /><!-- depends依赖于某个工程-->

    <target name="mkdir" >
	    <mkdir dir="${main}/${main.dir}"/><!--创建文件夹-->

	    <!--<dirname property="antfile.dir" file="${ant.file}"/>
	    <dirname property="antfile.dir" file="./script/new"/>可以捕获该文件夹的父级文件夹
	    <property name="antfile2.dir" location="${ant.file}"/>
	    <echo>${antfile.dir}</echo>-->
	    <!--dirname
		    file 文件路径
		    property 指定属性名称
	    -->

		<echo message="abcd" />
	    <!-- echo
		    message 想要打印的消息
			file 消息打印到指定文件
			append 将消息追加到已经存在的文件
			level 指定消息的类型，有”error”, “warning”, “info”, “verbose”, “debug”


			<echo message="Hello, world"/>
			<echo>Hello, world</echo>
			<dirname property="current.dir" file="./"/>
			<echo>${current.dir}</echo>
	    -->



        <!--delete dir="${main}/${main.dir}" /--><!--删除文件夹-->

        <concat destfile="${main}/${main.dir}/ab.js">
	        <!--concat
	            destfile 合并后的文件的目标路径，包含文件名
		        overwrite 是否允许覆盖目标文件，默认是允许
		        outputencoding 输出的目标文件的编码
	        -->
            <header trimleading="yes">${concat.note} </header>  <!--修改输出的目标文件的头部内容-->
            <!--<path path="a.js"/>
            <path path="b.js"/>-->

	        <fileset dir="./" includes="*.js"/> <!--合并制定类型文件-->
        </concat>
	    <copy file="${main}/${main.dir}/ab.js" tofile="./abc.js"/>
	    <!--<copy file="a.js" tofile="src/abc.js"/>  拷贝并改名-->
	    <!--<copy file="a.js" tofile="src/"/>  拷贝至指定文件夹-->


	    <delete file="${main}/${main.dir}/ab.js" />   <!--删除指定文件-->
	    <delete dir="${main}/${main.dir}"  />   <!--删除指定文件夹-->
	    <!--<delete>
		    <fileset dir="." includes="**/*.bak"/>   删除根目录所有是.bak的文件
	    </delete>-->
         <!--
            file 删除的目标文件
			dir 删除的目标目录
			verbose 是否显示每个删除的目标文件名称
			quiet 当设置为true，删除的文件或目录出现错误时不抛出任何异常，正常情况下会有删除失败说明
		-->
	    <!--<available file="${main}/script" type="dir" property="is"/>
	    <echo>${is}</echo>-->

	    <!--<get src="http://www.baidu.com/" dest="${main}/baidu-index.html" verbose="true" usetimestamp="true" />-->
	    <!--<get dest="${main}" verbose="true" usetimestamp="true" >
		    <url url="http://www.163.com/index-1.html" />
		    <url url="http://www.baidu.com/index-2.html" />
	    </get>-->


	    <!--<touch file="${main}/test.js"/>-->


	    <dirname property="current.dir" file="${ant}"/>     <!--定义root文件夹-->

	    <echo message="root Floder: "> ${current.dir}</echo>


	    <!--<concat destfile="${current.dir}/all.js" encoding="utf8" outputencoding="utf8">
		    <fileset dir="${current.dir}/script/" includes="**/*.js" />
	    </concat>-->


	    <!--文件有依赖时-->
	    <!--<concat destfile="${current.dir}/x-all.js" encoding="utf8" outputencoding="utf8">
		    <filelist dir="${current.dir}/script/" files="config.js,init.js" />
	    </concat>-->
    </target>

</project>